{"ast":null,"code":"var _jsxFileName = \"D:\\\\work_station\\\\software project\\\\EmoTunes\\\\EmoTunes\\\\src\\\\index.js\";\nimport React from 'react';\n// import ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createRoot } from \"react-dom/client\";\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport Navbar from './components/Navbar';\nimport Predictions from './components/Predictions';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 7\n  }, this)\n}, {\n  path: \"/angry\",\n  element: /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Predictions, {\n      mood: \"angry\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true)\n}, {\n  path: \"sad\",\n  element: /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Predictions, {\n      mood: \"sad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true)\n}, {\n  path: \"calm\",\n  element: /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Predictions, {\n      mood: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true)\n}, {\n  path: \"/happy\",\n  element: /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Predictions, {\n      mood: \"happy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true)\n}, {\n  path: \"image\",\n  element: /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Predictions, {\n      mood: \"happy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true)\n}]);\ncreateRoot(document.getElementById(\"root\")).render( /*#__PURE__*/_jsxDEV(RouterProvider, {\n  router: router\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 69,\n  columnNumber: 3\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","App","reportWebVitals","createRoot","createBrowserRouter","RouterProvider","Navbar","Predictions","jsxDEV","_jsxDEV","Fragment","_Fragment","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","mood","document","getElementById","render"],"sources":["D:/work_station/software project/EmoTunes/EmoTunes/src/index.js"],"sourcesContent":["import React from 'react';\n// import ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createRoot } from \"react-dom/client\";\nimport {\n  createBrowserRouter,\n  RouterProvider,\n} from \"react-router-dom\";\nimport Navbar from './components/Navbar';\nimport Predictions from './components/Predictions';\n\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: (\n      <App/>\n    ),\n  },\n  {\n    path: \"/angry\",\n    element: (\n      <>\n      <Navbar/>\n      <Predictions mood={\"angry\"}/>\n      </>\n    )\n  },\n  {\n    path: \"sad\",\n    element: (\n      <>\n      <Navbar/>\n      <Predictions mood={\"sad\"}/>\n      </>\n    )\n  },\n  {\n    path: \"calm\",\n    element: (\n      <>\n      <Navbar/>\n      <Predictions mood={\"neutral\"}/>\n      </>\n    )\n  },\n  {\n    path: \"/happy\",\n    element: (\n      <>\n      <Navbar/>\n      <Predictions mood={\"happy\"}/>\n      </>\n    )\n  },\n  {\n    path: \"image\",\n    element: (\n      <>\n      <Navbar/>\n      <Predictions mood={\"happy\"}/>\n      </>\n    )\n  },\n]);\n\ncreateRoot(document.getElementById(\"root\")).render(\n  <RouterProvider router={router} />\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}