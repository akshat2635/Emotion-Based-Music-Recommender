{"ast":null,"code":"var _jsxFileName = \"D:\\\\work_station\\\\software project\\\\react_website\\\\emotion-music\\\\src\\\\components\\\\Pred.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Pred(props) {\n  _s();\n  const [Data, setData] = useState([]);\n  const [Loading, setLoading] = useState(true);\n  // const [Error, setError] = useState(null);\n\n  useEffect(() => {\n    data_fetch();\n  }, []);\n  const data_fetch = async () => {\n    const response = await fetch('http://127.0.0.1:5000/upload', {\n      mode: 'no-cors',\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: 'image=' + encodeURIComponent(props.imageData)\n    });\n    if (!response.ok) {\n      throw new Error('Network response was not ok.');\n    }\n    const data = await response.json();\n    console.log(response);\n    setData(data['data']);\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this) : Error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", Error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this) // Displaying error message as string\n    : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Data.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item[\"Track URI\"]\n      }, item[\"Track URI\"], false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(Pred, \"N1GDb3ZaOe/Yrm7B14dxrAEj7VI=\");\n_c = Pred;\nvar _c;\n$RefreshReg$(_c, \"Pred\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Pred","props","_s","Data","setData","Loading","setLoading","data_fetch","response","fetch","mode","method","headers","body","encodeURIComponent","imageData","ok","Error","data","json","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","_c","$RefreshReg$"],"sources":["D:/work_station/software project/react_website/emotion-music/src/components/Pred.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nexport default function Pred(props) {\r\n    const [Data, setData] = useState([]);\r\n    const [Loading, setLoading] = useState(true);\r\n    // const [Error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        data_fetch();\r\n    }, []);\r\n\r\n    const data_fetch = async () => {\r\n        const response = await fetch('http://127.0.0.1:5000/upload', {\r\n            mode: 'no-cors',\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            },\r\n            body: 'image=' + encodeURIComponent(props.imageData)\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error('Network response was not ok.');\r\n        }\r\n\r\n        const data = await response.json();\r\n        console.log(response);\r\n        setData(data['data']);\r\n        setLoading(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {Loading ? (\r\n                <p>Loading...</p>\r\n            ) : Error ? (\r\n                <p>Error: {Error}</p> // Displaying error message as string\r\n            ) : (\r\n                <ul>\r\n                    {Data.map((item) => (\r\n                        <li key={item[\"Track URI\"]}>{item[\"Track URI\"]}</li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,eAAe,SAASC,IAAIA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAChC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C;;EAEAD,SAAS,CAAC,MAAM;IACZW,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;MACzDC,IAAI,EAAE,SAAS;MACfC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAE,QAAQ,GAAGC,kBAAkB,CAACb,KAAK,CAACc,SAAS;IACvD,CAAC,CAAC;IAEF,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;IACnD;IAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;IAClCC,OAAO,CAACC,GAAG,CAACb,QAAQ,CAAC;IACrBJ,OAAO,CAACc,IAAI,CAAC,MAAM,CAAC,CAAC;IACrBZ,UAAU,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,oBACIP,OAAA;IAAAuB,QAAA,EACKjB,OAAO,gBACJN,OAAA;MAAAuB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GACjBT,KAAK,gBACLlB,OAAA;MAAAuB,QAAA,GAAG,SAAO,EAACL,KAAK;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,CAAC;IAAA,eAEtB3B,OAAA;MAAAuB,QAAA,EACKnB,IAAI,CAACwB,GAAG,CAAEC,IAAI,iBACX7B,OAAA;QAAAuB,QAAA,EAA6BM,IAAI,CAAC,WAAW;MAAC,GAArCA,IAAI,CAAC,WAAW,CAAC;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAyB,CACtD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EACP;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACxB,EAAA,CA5CuBF,IAAI;AAAA6B,EAAA,GAAJ7B,IAAI;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}